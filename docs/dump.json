[
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/app.js",
    "memberof": null,
    "longname": "src/app.js",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "content": "/*\n * Copyright (c) 2015 TechnologyAdvice\n */\n\n// Deps\nconst express = require('express')\nconst bodyParser = require('body-parser')\nconst fork = require('child_process').fork\nconst path = require('path')\nconst _ = require('lodash')\n\n// Setup logs\nexport const log = require('bristol')\nlog.addTarget('console').withFormatter('human')\n\n// Default path to lambda runner\nlet runner = path.resolve(__dirname, './runner')\n\n// Import router\nimport { loadSchema, initRoutes } from './router'\nimport { parseRequestParams } from './util'\n\n/**\n * Allows overriding default runner script\n * @param {String} runnerPath Path to the runner module\n */\nexport const setRunner = (runnerPath) => runner = path.resolve(runnerPath)\n\n/**\n * Default config object\n * @property config\n * @attribute {String} lambdas The path to the lambdas directory\n * @attribute {String} schema The path to the Gateway YAML config\n * @attribute {Number} port The port for the HTTP service\n * @attribute {String} apiPath The request path for the api\n * @attribute {Boolean} log Show or repress console output\n */\nexport let config = {\n  lambdas: './lambdas',\n  schema: './gateway.yml',\n  port: 8181,\n  apiPath: '/api',\n  log: true,\n  cors: {\n    origin: '*',\n    methods: 'GET,PUT,POST,DELETE,OPTIONS',\n    headers: 'Content-Type, Authorization, Content-Length, X-Requested-With'\n  }\n}\n\n// Express setup\nexport const service = express()\n\n// CORS\nexport const setCORS = () => {\n  service.use((req, res, next) => {\n    res.header('Access-Control-Allow-Origin', config.cors.origin)\n    res.header('Access-Control-Allow-Methods', config.cors.methods)\n    res.header('Access-Control-Allow-Headers', config.cors.headers)\n    if (req.method === 'OPTIONS') {\n      res.send(200)\n    } else {\n      next()\n    }\n  })\n}\n\n// Body parser\nservice.use(bodyParser.json())\n\n/**\n * Calls log output method\n * @param {String} type Type of log message to write\n * @param {String|Object} msg Message body of log\n */\nexport const procLog = (type, ...msg) => {\n  /* istanbul ignore if  */\n  if (config.log) log[type](msg[0], msg[1])\n}\n\n/**\n * Handles response from forked lambda runner procs\n * @param {Object} msg Message object from child proc\n * @param {Object} [res] Express response object\n */\nexport const procResponse = (msg, res) => {\n  switch (msg.type) {\n    case 'metric': procLog('info', 'Lambda Processed', msg.output); break\n    case 'debug': procLog('info', 'Lambda Debug', msg.output); break\n    case 'success': res.status(200).send(msg.output); break\n    case 'error': res.status(500).send(msg.output); break\n    default: procLog('error', 'Missing response type')\n  }\n}\n\n/**\n * Parses the properties from the template and then calls `parseRequestParams`\n * to align variable properties with their template keys\n * @param {Object} req The request object\n * @param {Object} template The gateway template\n * @returns {Object} the full event to be passed to the Lambda\n */\nexport const parseRequest = (req, template) => {\n  let tmpBody = {}\n  for (let prop in template) {\n    /* istanbul ignore else  */\n    if ({}.hasOwnProperty.call(template, prop)) {\n      tmpBody[prop] = parseRequestParams(template[prop], req)\n    }\n  }\n  return tmpBody\n}\n\n/**\n * Builds the `event` payload with the request body and then forks a new\n * runner process to the requested lambda. Awaits messaging from the lambda\n * to return response payload and display log information\n * @param {String} lambda The lambda to run\n * @param {Object} template The gateway template\n * @param {Object} req Express req object\n * @param {Object} res Express res object\n */\nexport const runLambda = (lambda, template, req, res) => {\n  // Parse body against template\n  const body = parseRequest(req, template)\n  // Build event by extending body with params\n  const event = JSON.stringify(_.extend(body, req.params))\n  // Build env to match current envirnment, add lambdas and event\n  const env = _.extend({ lambdas: config.lambdas, event }, process.env)\n  // Execute lambda\n  fork(runner, [ lambda ], { env }).on('message', (msg) => procResponse(msg, res))\n}\n\n/**\n * Combines the default config with any passed to init and overrides (lastly)\n * if there are any environment variables set\n * @param {Object} [cfg] The config passed through init\n */\nexport const buildConfig = (cfg) => {\n  // Against defaults\n  _.extend(config, cfg)\n  // Against env vars\n  for (let prop in config) {\n    /* istanbul ignore else  */\n    if ({}.hasOwnProperty.call(config, prop)) {\n      let envVar = process.env['GL_' + prop.toUpperCase()]\n      if (envVar) config[prop] = envVar\n    }\n  }\n  // Apply config to CORS\n  setCORS()\n}\n\n/**\n * Initialize the service by building the config, loading the (YAML) Gateway\n * API configuration and then initializing routes on Express and finally\n * starting the service.\n * @param {Object} [config] The main service configuration\n */\nexport const init = (cfg) => {\n  // Setup config\n  buildConfig(cfg)\n  // Load schema into router\n  loadSchema(config.schema)\n  // Initialize all routes from gateway schema\n  initRoutes()\n  // Starts service\n  service.listen(config.port, () => {\n    procLog('info', 'Service running', { port: config.port })\n  })\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "express",
    "memberof": "src/app.js",
    "longname": "src/app.js~express",
    "access": null,
    "export": false,
    "importPath": "glambda/src/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "bodyParser",
    "memberof": "src/app.js",
    "longname": "src/app.js~bodyParser",
    "access": null,
    "export": false,
    "importPath": "glambda/src/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "fork",
    "memberof": "src/app.js",
    "longname": "src/app.js~fork",
    "access": null,
    "export": false,
    "importPath": "glambda/src/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "src/app.js",
    "longname": "src/app.js~path",
    "access": null,
    "export": false,
    "importPath": "glambda/src/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "src/app.js",
    "longname": "src/app.js~_",
    "access": null,
    "export": false,
    "importPath": "glambda/src/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "log",
    "memberof": "src/app.js",
    "longname": "src/app.js~log",
    "access": null,
    "export": true,
    "importPath": "glambda/src/app.js",
    "importStyle": "{log}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "runner",
    "memberof": "src/app.js",
    "longname": "src/app.js~runner",
    "access": null,
    "export": false,
    "importPath": "glambda/src/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "setRunner",
    "memberof": "src/app.js",
    "longname": "src/app.js~setRunner",
    "access": null,
    "export": true,
    "importPath": "glambda/src/app.js",
    "importStyle": "{setRunner}",
    "description": "Allows overriding default runner script",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "runnerPath",
        "description": "Path to the runner module"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "config",
    "memberof": "src/app.js",
    "longname": "src/app.js~config",
    "access": null,
    "export": true,
    "importPath": "glambda/src/app.js",
    "importStyle": "{config}",
    "description": "Default config object",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@attribute",
        "tagValue": "{String} lambdas The path to the lambdas directory"
      },
      {
        "tagName": "@attribute",
        "tagValue": "{String} schema The path to the Gateway YAML config"
      },
      {
        "tagName": "@attribute",
        "tagValue": "{Number} port The port for the HTTP service"
      },
      {
        "tagName": "@attribute",
        "tagValue": "{String} apiPath The request path for the api"
      },
      {
        "tagName": "@attribute",
        "tagValue": "{Boolean} log Show or repress console output"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "service",
    "memberof": "src/app.js",
    "longname": "src/app.js~service",
    "access": null,
    "export": true,
    "importPath": "glambda/src/app.js",
    "importStyle": "{service}",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "setCORS",
    "memberof": "src/app.js",
    "longname": "src/app.js~setCORS",
    "access": null,
    "export": true,
    "importPath": "glambda/src/app.js",
    "importStyle": "{setCORS}",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "procLog",
    "memberof": "src/app.js",
    "longname": "src/app.js~procLog",
    "access": null,
    "export": true,
    "importPath": "glambda/src/app.js",
    "importStyle": "{procLog}",
    "description": "Calls log output method",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Type of log message to write"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "Message body of log"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "procResponse",
    "memberof": "src/app.js",
    "longname": "src/app.js~procResponse",
    "access": null,
    "export": true,
    "importPath": "glambda/src/app.js",
    "importStyle": "{procResponse}",
    "description": "Handles response from forked lambda runner procs",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "Message object from child proc"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "res",
        "description": "Express response object"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "parseRequest",
    "memberof": "src/app.js",
    "longname": "src/app.js~parseRequest",
    "access": null,
    "export": true,
    "importPath": "glambda/src/app.js",
    "importStyle": "{parseRequest}",
    "description": "Parses the properties from the template and then calls `parseRequestParams`\nto align variable properties with their template keys",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} the full event to be passed to the Lambda"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "The request object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": "The gateway template"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the full event to be passed to the Lambda"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "runLambda",
    "memberof": "src/app.js",
    "longname": "src/app.js~runLambda",
    "access": null,
    "export": true,
    "importPath": "glambda/src/app.js",
    "importStyle": "{runLambda}",
    "description": "Builds the `event` payload with the request body and then forks a new\nrunner process to the requested lambda. Awaits messaging from the lambda\nto return response payload and display log information",
    "lineNumber": 123,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "lambda",
        "description": "The lambda to run"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": "The gateway template"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res object"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "buildConfig",
    "memberof": "src/app.js",
    "longname": "src/app.js~buildConfig",
    "access": null,
    "export": true,
    "importPath": "glambda/src/app.js",
    "importStyle": "{buildConfig}",
    "description": "Combines the default config with any passed to init and overrides (lastly)\nif there are any environment variables set",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "cfg",
        "description": "The config passed through init"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "init",
    "memberof": "src/app.js",
    "longname": "src/app.js~init",
    "access": null,
    "export": true,
    "importPath": "glambda/src/app.js",
    "importStyle": "{init}",
    "description": "Initialize the service by building the config, loading the (YAML) Gateway\nAPI configuration and then initializing routes on Express and finally\nstarting the service.",
    "lineNumber": 160,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "The main service configuration"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/router.js",
    "memberof": null,
    "longname": "src/router.js",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "content": "/*\n * Copyright (c) 2015 TechnologyAdvice\n */\n\n/* eslint no-param-reassign: 0 */\nconst path = require('path')\nconst yaml = require('yamljs')\n\nimport { config, log, service, runLambda } from './app'\nimport { fileExists, parseRouteParams } from './util'\n\n/**\n * Placeholder for schema object\n * @parameter {Object} schema\n */\nexport let schema = null\n\n/**\n * Placeholder for routes array\n * @parameter {Array} routes\n */\nexport let routes = []\n\n\n/**\n * Loads the schema from specified file\n * @param {String} file The file path of the Gateway schema\n */\nexport const loadSchema = (file) => {\n  // No checks, YAML error automagically\n  schema = yaml.load(path.resolve(file))\n}\n\n/**\n * Walks schema to look for request methods (verbs), when a method is found it\n * creates a route with the parent node key (the path), the current method,\n * and the properties of that method (the template)\n * @param {Object} node The node to traverse\n * @param {String} prevKey The key of the previous traversal for accessing parent/path\n */\nexport const walkSchema = (node = schema, prevKey = null) => {\n  // Methods indicate traversal stops\n  const methods = [ 'GET', 'POST', 'PUT', 'DELETE', 'HEAD', 'OPTIONS', 'PATCH' ]\n  for (let prop in node) {\n    // Ensure prop\n    if ({}.hasOwnProperty.call(node, prop)) {\n      if (methods.indexOf(prop) >= 0) {\n        // Node is a method, push to router\n        routes.push({ route: prevKey, method: prop, config: node[prop] })\n      } else {\n        // Route node, traverse\n        walkSchema(node[prop], prop)\n      }\n    }\n  }\n}\n\n/**\n * Iterates over the properties of the template and calls `parseRouteParams` to\n * convert the bracket-delimited params with colon-lead (Express-style) route\n * params with the template-designated key/property name\n * @param {String} route The route to modify\n * @param {Object} template The template object to match against\n * @returns {String} The formatted route\n */\nexport const mapTemplateParams = (route, template) => {\n  for (let prop in template) {\n    if ({}.hasOwnProperty.call(template, prop)) {\n      let param = parseRouteParams(template[prop], prop, route)\n      if (param) {\n        route = param\n        delete template[prop]\n      }\n    }\n  }\n  // Return modified route and template\n  return { route, template }\n}\n\n/**\n * Ensures that the lambda exists (on init/load) then creates and Express\n * verb+route object for the specific request\n * @param {Object} route The route to add\n */\nexport const addRoute = (route) => {\n  // Build ensure specified Lambda exists\n  fileExists(`${config.lambdas}/${route.config.lambda}/index.js`).then(() => {\n    // Add method route\n    service[route.method.toLowerCase()](config.apiPath + route.route, (req, res) => {\n      runLambda(route.config.lambda, route.config.templates['application/json'], req, res)\n    })\n  })\n  .catch(() => {\n    log.error('Missing Lambda', { name: route.config.lambda })\n  })\n}\n\n/**\n * Itterates over the routes array to map template parameters, set the route\n * property, config > templates and call `addRoute`\n */\nconst buildRoutes = () => {\n  // Itterate over routes\n  routes.forEach((rte) => {\n    // Map template params\n    let mappedRoutes = mapTemplateParams(rte.route, rte.config.templates['application/json'])\n    rte.route = mappedRoutes.route\n    rte.config.templates['application/json'] = mappedRoutes.template\n    addRoute(rte)\n  })\n}\n\n/**\n * Initializes the routes by walking the Gateway schema then running `buildRoutes`\n * to load into Express object\n */\nexport const initRoutes = () => {\n  // Walk the schema to build routes\n  walkSchema(schema)\n  // Map params and build express routes\n  buildRoutes()\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "src/router.js",
    "longname": "src/router.js~path",
    "access": null,
    "export": false,
    "importPath": "glambda/src/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "yaml",
    "memberof": "src/router.js",
    "longname": "src/router.js~yaml",
    "access": null,
    "export": false,
    "importPath": "glambda/src/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "schema",
    "memberof": "src/router.js",
    "longname": "src/router.js~schema",
    "access": null,
    "export": true,
    "importPath": "glambda/src/router.js",
    "importStyle": "{schema}",
    "description": "Placeholder for schema object",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@parameter",
        "tagValue": "{Object} schema"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "routes",
    "memberof": "src/router.js",
    "longname": "src/router.js~routes",
    "access": null,
    "export": true,
    "importPath": "glambda/src/router.js",
    "importStyle": "{routes}",
    "description": "Placeholder for routes array",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@parameter",
        "tagValue": "{Array} routes"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "loadSchema",
    "memberof": "src/router.js",
    "longname": "src/router.js~loadSchema",
    "access": null,
    "export": true,
    "importPath": "glambda/src/router.js",
    "importStyle": "{loadSchema}",
    "description": "Loads the schema from specified file",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "The file path of the Gateway schema"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "walkSchema",
    "memberof": "src/router.js",
    "longname": "src/router.js~walkSchema",
    "access": null,
    "export": true,
    "importPath": "glambda/src/router.js",
    "importStyle": "{walkSchema}",
    "description": "Walks schema to look for request methods (verbs), when a method is found it\ncreates a route with the parent node key (the path), the current method,\nand the properties of that method (the template)",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The node to traverse"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "prevKey",
        "description": "The key of the previous traversal for accessing parent/path"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "mapTemplateParams",
    "memberof": "src/router.js",
    "longname": "src/router.js~mapTemplateParams",
    "access": null,
    "export": true,
    "importPath": "glambda/src/router.js",
    "importStyle": "{mapTemplateParams}",
    "description": "Iterates over the properties of the template and calls `parseRouteParams` to\nconvert the bracket-delimited params with colon-lead (Express-style) route\nparams with the template-designated key/property name",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} The formatted route"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "The route to modify"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": "The template object to match against"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "The formatted route"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "addRoute",
    "memberof": "src/router.js",
    "longname": "src/router.js~addRoute",
    "access": null,
    "export": true,
    "importPath": "glambda/src/router.js",
    "importStyle": "{addRoute}",
    "description": "Ensures that the lambda exists (on init/load) then creates and Express\nverb+route object for the specific request",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "The route to add"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "buildRoutes",
    "memberof": "src/router.js",
    "longname": "src/router.js~buildRoutes",
    "access": null,
    "export": false,
    "importPath": "glambda/src/router.js",
    "importStyle": null,
    "description": "Itterates over the routes array to map template parameters, set the route\nproperty, config > templates and call `addRoute`",
    "lineNumber": 102,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "initRoutes",
    "memberof": "src/router.js",
    "longname": "src/router.js~initRoutes",
    "access": null,
    "export": true,
    "importPath": "glambda/src/router.js",
    "importStyle": "{initRoutes}",
    "description": "Initializes the routes by walking the Gateway schema then running `buildRoutes`\nto load into Express object",
    "lineNumber": 117,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/runner.js",
    "memberof": null,
    "longname": "src/runner.js",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "content": "/*\n * Copyright (c) 2015 TechnologyAdvice\n */\n\n/* eslint no-process-exit: 0 */\nconst util = require('util')\nconst path = require('path')\n\n// Override console.log to send messages back through proc emit\nconsole.log = console.info = console.warn = console.error = console.debug = (...args) => {\n  process.send({\n    type: 'debug',\n    output: {\n      lambda: process.argv[2],\n      data: args\n    }\n  })\n}\n\n// Sets the lambda from its path\nconst lambda = require(path.resolve(`${process.env.lambdas}/${process.argv[2]}/index`))\n\n/**\n * Creates the context object passed to lambdas\n * @property context\n */\nconst context = {\n  /**\n   * Emit a success message with output\n   * @param {Object|String} result The contents of the result\n   */\n  succeed: (result) => {\n    process.send({ type: 'success', output: result })\n    context.done()\n  },\n  /**\n   * Emit an error message with output\n   * @param {Object|String} error The error object or message\n   */\n  fail: (error) => {\n    process.send({ type: 'error', output: error })\n    context.done()\n  },\n  /**\n   * Emit closing metrics and end the lambda process\n   */\n  done: () => {\n    process.send({ type: 'metric', output: {\n      lambda: process.argv[2],\n      event: process.env.event,\n      pid: process.pid,\n      memory: util.inspect(process.memoryUsage()),\n      time: process.uptime()\n    }})\n    process.exit()\n  }\n}\n\n// Call lambda's handler\nlambda.handler(JSON.parse(process.env.event), context)\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "util",
    "memberof": "src/runner.js",
    "longname": "src/runner.js~util",
    "access": null,
    "export": false,
    "importPath": "glambda/src/runner.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "src/runner.js",
    "longname": "src/runner.js~path",
    "access": null,
    "export": false,
    "importPath": "glambda/src/runner.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "lambda",
    "memberof": "src/runner.js",
    "longname": "src/runner.js~lambda",
    "access": null,
    "export": false,
    "importPath": "glambda/src/runner.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "context",
    "memberof": "src/runner.js",
    "longname": "src/runner.js~context",
    "access": null,
    "export": false,
    "importPath": "glambda/src/runner.js",
    "importStyle": null,
    "description": "Creates the context object passed to lambdas",
    "lineNumber": 27,
    "properties": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/util.js",
    "memberof": null,
    "longname": "src/util.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/*\n * Copyright (c) 2015 TechnologyAdvice\n */\n\nconst Promise = require('bluebird')\nconst path = require('path')\nconst fs = Promise.promisifyAll(require('fs'))\n\n/**\n * Checks if file exists\n * @param {String} file Path to file\n * @returns {Object} Promise\n */\nexport const fileExists = (file) => {\n  return fs.openAsync(path.resolve(file), 'r')\n}\n\n/**\n * Abstracts parsing of routes against template values\n * @param {String} value The value of the template element\n * @param {String} key The property name of the template element\n * @param {String} route The route to check/modify\n */\nexport const parseRouteParams = (value, key, route) => {\n  if (value.indexOf(`$input.params('`) >= 0) {\n    // Remove wrapper\n    let param = value.replace(`$input.params('`, '').replace(`')`, '')\n    // Ensure route contains match, replace\n    if (route.indexOf(`{${param}}`) >= 0) return route.replace(`{${param}}`, `:${key}`)\n    // Not matched\n    return false\n  }\n  return false\n}\n\n/**\n * Abstracts parsing of body against template values\n * @param {String} value The value of the template element\n * @param {Object} req The request object\n * @returns {String} The value of the body property requested by the template\n */\nexport const parseRequestParams = (value, req) => {\n  // Body\n  if (value.indexOf(`$input.json('$`) >= 0) {\n    // Get the name to check\n    let name = value.replace(`$input.json('$`, '').replace(`')`, '')\n    // Return the entire body\n    if (!name.length) return req.body\n    // Return the specific property of the body (or null if DNE)\n    name = name.replace(/^\\./, '') // Remove leading dot\n    return (req.body && req.body[name]) ? req.body[name] : null\n  }\n  // Param (querystring or header)\n  if (value.indexOf(`$input.params('`) >= 0) {\n    // Remove wrapper\n    let param = value.replace(`$input.params('`, '').replace(`')`, '')\n    // Return if matching querysting\n    if (req.query && req.query[param]) return req.query[param]\n    // Retrun if matching header (or undefined)\n    return req.get(param)\n  }\n  // Custom value passed through\n  return value\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Promise",
    "memberof": "src/util.js",
    "longname": "src/util.js~Promise",
    "access": null,
    "export": false,
    "importPath": "glambda/src/util.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "src/util.js",
    "longname": "src/util.js~path",
    "access": null,
    "export": false,
    "importPath": "glambda/src/util.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "fs",
    "memberof": "src/util.js",
    "longname": "src/util.js~fs",
    "access": null,
    "export": false,
    "importPath": "glambda/src/util.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "fileExists",
    "memberof": "src/util.js",
    "longname": "src/util.js~fileExists",
    "access": null,
    "export": true,
    "importPath": "glambda/src/util.js",
    "importStyle": "{fileExists}",
    "description": "Checks if file exists",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "Path to file"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Promise"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "parseRouteParams",
    "memberof": "src/util.js",
    "longname": "src/util.js~parseRouteParams",
    "access": null,
    "export": true,
    "importPath": "glambda/src/util.js",
    "importStyle": "{parseRouteParams}",
    "description": "Abstracts parsing of routes against template values",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value of the template element"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The property name of the template element"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "The route to check/modify"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "parseRequestParams",
    "memberof": "src/util.js",
    "longname": "src/util.js~parseRequestParams",
    "access": null,
    "export": true,
    "importPath": "glambda/src/util.js",
    "importStyle": "{parseRequestParams}",
    "description": "Abstracts parsing of body against template values",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} The value of the body property requested by the template"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value of the template element"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "The request object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "The value of the body property requested by the template"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": null,
    "builtinExternal": true
  }
]